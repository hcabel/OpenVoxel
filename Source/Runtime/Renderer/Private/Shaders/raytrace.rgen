#version 460
#extension GL_EXT_ray_tracing : require

struct RayPayload
{
	vec3 color;
	float distanceAlongTheRay;
	bool didHit;
};

layout(location = 0) rayPayloadEXT RayPayload payload;

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 0, binding = 1, rgba32f) uniform image2D image;

void main()
{
	vec2 uv = gl_LaunchIDEXT.xy / vec2(gl_LaunchSizeEXT.xy);
	uv = (uv * 2.0f - 1.0f) * vec2(1.0f, -1.0f);

	vec3 cameraPosition = vec3(-20.0, 20.0, -20.0);
	vec3 cameraDirection = -normalize(cameraPosition);

	traceRayEXT(
		topLevelAS,
		gl_RayFlagsOpaqueEXT,
		0xFF,
		0,
		0,
		0,
		cameraPosition,
		0.001,
		cameraDirection + vec3(uv.x, uv.y, 0.0f),
		100.0,
		0
	);

	if (payload.didHit)
		payload.color = payload.color * (payload.distanceAlongTheRay / 5.0f);

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload.color, 1.0f));
}